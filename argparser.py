import argparse

parser = argparse.ArgumentParser()
parser.add_argument('-t', type=int, help='test size', default=1)
parser.add_argument('-d', type=int, help='min distance between train and test size', default=1)
parser.add_argument('-gap', action="store_true", help='use GAP')
parser.add_argument('-noise', type=int, help='noise (number of pixels)', default=0)
parser.add_argument('-n', type=int, help='number of examples in training set', default=1)
parser.add_argument('-pretrained', action="store_true", help='use pretrained weights')
parser.add_argument('-batch_size', type=int, help='train and validation batch size', default=1)
parser.add_argument('-train_steps', type=int, help='training steps per epoch', default=100)
parser.add_argument('-test_batch_size', type=int, help='test batch size', default=100)
parser.add_argument('-lr', type=int, help='learning rate', default=0.001)
parser.add_argument('-v', action="store_true", help='report progress')
parser.add_argument('-epochs', type=int, help='number of training epochs', default=20)
parser.add_argument('-stop_patience', type=int, help='stopping criterion patience', default=2)
parser.add_argument('-stop_min_delta', type=float, help='stopping criterion minimum progress', default=0.01)
parser.add_argument('-image_width', type=int, help='image width', default=400)
parser.add_argument('-image_height', type=int, help='image height', default=400)
parser.add_argument('-min_train_size', type=int, help='minimum image size', default=1)
parser.add_argument('-max_train_size', type=int, help='maximum image size', default=40)
parser.add_argument('-image_scale', type=int, help='image size scale', default=40)
parser.add_argument('-n_shapes', type=int, help='number of shapes', default=24)

args = parser.parse_args()